version: '3.9'

services:
  user_service:
    build:
      context: ./user_service
    container_name: booking_system_user_service
    ports:
      - "8001:8001"
    volumes:
      - ./user_service:/app
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - RABBITMQ_HOST=rabbitmq
    command: ["python", "manage.py", "runserver", "0.0.0.0:8001"]
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:15
    container_name: booking_system_db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  booking_service:
    build:
      context: ./booking_service
    container_name: booking_service
    ports:
      - "8000:8000" # Expose container port 8000 to host port 8000
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
      - DJANGO_SETTINGS_MODULE=booking_service.settings

volumes:
  postgres_data:
